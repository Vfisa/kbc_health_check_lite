import streamlit as stsql_jobs_view = '''create or replace table KBC_JOB_VALID_START AS select "kbc_component_id", "kbc_component_configuration_id", "job_time_credits_used", "kbc_project_id", "kbc_job_id", to_date("job_start_at") as "job_start_date"from "kbc_job"where "job_start_at"!='';'''sql_cluster_key = '''alter table KBC_JOB_VALID_START cluster by ("kbc_project_id");'''def prepare_sql_start_dates(start_date, end_date):    """    Parameters    ----------    start_date : TYPE        DESCRIPTION.    end_date : TYPE        DESCRIPTION.    Returns    -------    sql_jobs_view_filtered : TYPE        returns parametrized sql statement,         create or replace view KBC_JOB_VALID_START_DATES as         select * from KBC_JOB_VALID_START        where job_start_date between {start_date} and {end_date};.    """    sql_jobs_view_filtered = 'create or replace view KBC_JOB_VALID_START_DATES AS '     sql_jobs_view_filtered = sql_jobs_view_filtered + ' select * from KBC_JOB_VALID_START '    sql_jobs_view_filtered = sql_jobs_view_filtered + 'where "job_start_date" between \'' + str(start_date) + '\' and \'' + str(end_date) + '\' ;'    return sql_jobs_view_filteredsql_org = 'select distinct("kbc_organization_id"), "kbc_organization", "kbc_organization_url" from "kbc_organization" where "kbc_organization_is_deleted"=' + "'false';"def prepare_sql_projects(org_id_selected):    return 'select distinct("kbc_project_id"), "kbc_project" from "kbc_project" where "kbc_organization_id"=' + "'" + org_id_selected + "';"def prepare_sql_breakdown(project_ids_str, start_date, end_date):    sql_breakdown = f'select * from "kbc_usage_metrics_values" where "kbc_project_id" in {project_ids_str} and try_to_date("date") between ' + "'" + str(start_date) + "' and '" + str(end_date) + "' ;"    return sql_breakdowndef prepare_sql_jobs(JOB_FIELDS, start_date, end_date):    sql_jobs = f'''select     {JOB_FIELDS}    , c."kbc_configuration_is_deleted"    , c."kbc_component_configuration_url"    from KBC_JOB_VALID_START_DATES j     inner join "kbc_component_configuration" c    on c."kbc_component_configuration_id" = j."kbc_component_configuration_id"    where j."kbc_project_id" in  {st.session_state["project_ids_str"]} and "job_start_date" between '''#    where j."kbc_project_id" in  {project_ids_str} and "job_start_date" between '''    sql_jobs = sql_jobs + "'" + str(start_date) + "' and '" + str(end_date) + "' ;"     return sql_jobs       